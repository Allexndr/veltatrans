// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

const TELEGRAM_BOT_TOKEN = '8414818778:AAG2QXqDu0WKwsClyMt5CpbpLQBL3QLVWUE';
const WEBHOOK_URL = 'https://velta-logistics.com/api/telegram/webhook';
const TELEGRAM_CHANNEL_ID = '-1002999769930';

let initializationAttempted = false;

export async function initializeTelegramBot() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –∏ —Ç–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
  if (initializationAttempted || process.env.NODE_ENV !== 'production') {
    return;
  }

  initializationAttempted = true;

  try {
    console.log('ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram –±–æ—Ç–∞...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getMe`);
    const botInfo = await botResponse.json();

    if (!botInfo.ok) {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞');
    }

    console.log(`‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @${botInfo.result.username}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π webhook
    const webhookResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/getWebhookInfo`);
    const webhookInfo = await webhookResponse.json();

    // –ï—Å–ª–∏ webhook —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º –µ–≥–æ
    if (webhookInfo.result?.url === WEBHOOK_URL) {
      console.log('‚úÖ Webhook —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook
    const setWebhookResponse = await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/setWebhook`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        url: WEBHOOK_URL,
        allowed_updates: ['message', 'callback_query'],
        drop_pending_updates: true
      }),
    });

    const webhookResult = await setWebhookResponse.json();

    if (webhookResult.ok) {
      console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ');

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –≤ –∫–∞–Ω–∞–ª
      try {
        await fetch(`https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            chat_id: TELEGRAM_CHANNEL_ID,
            text: `üöÄ <b>VELTA TRANS - –°–ò–°–¢–ï–ú–ê –ó–ê–ü–£–©–ï–ù–ê</b>

‚úÖ Telegram –±–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
‚úÖ Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏  
‚úÖ –ö–∞–Ω–∞–ª –ø–æ–¥–∫–ª—é—á–µ–Ω
‚úÖ –ì–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É –∑–∞—è–≤–æ–∫

ü§ñ <b>–ë–æ—Ç:</b> @veltatrans_bot
üì¢ <b>–ö–∞–Ω–∞–ª:</b> ${TELEGRAM_CHANNEL_ID}
üåê <b>–°–∞–π—Ç:</b> velta-logistics.com

‚è∞ <b>–ó–∞–ø—É—â–µ–Ω–æ:</b> ${new Date().toLocaleString('ru-RU')}

<i>–í–æ–¥–∏—Ç–µ–ª–∏ –º–æ–≥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: /start</i>`,
            parse_mode: 'HTML'
          }),
        });
        console.log('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—É—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª');
      } catch (notificationError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', notificationError);
      }
    } else {
      throw new Error(webhookResult.description || '–û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook');
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞:', error);
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
if (typeof window === 'undefined' && process.env.NODE_ENV === 'production') {
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ–ª —Å—Ç–∞—Ä—Ç–æ–≤–∞—Ç—å
  setTimeout(() => {
    initializeTelegramBot().catch(console.error);
  }, 3000);
}
