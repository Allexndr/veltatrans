'use client';

import { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { useTranslations } from 'next-intl';

export default function HeroGallery() {
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isPaused, setIsPaused] = useState(false);
  const t = useTranslations('heroGallery');

  // –ú–∞—Å—Å–∏–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –ª–æ–≥–∏—Å—Ç–∏–∫–∏ —Å –Ω–æ–≤—ã–º–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏
  const images = [
    // –ñ–î –ø–µ—Ä–µ–≤–æ–∑–∫–∏
    {
      src: '/assets/images/railway-case.jpg',
      alt: '–ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏',
      title: '–ñ–î –ø–µ—Ä–µ–≤–æ–∑–∫–∏',
      icon: 'üöÇ'
    },
    // –°–∫–ª–∞–¥
    {
      src: '/assets/images/warehouse-case.jpg',
      alt: '–°–∫–ª–∞–¥—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
      title: '–°–∫–ª–∞–¥—Å–∫–∏–µ —É—Å–ª—É–≥–∏',
      icon: 'üè≠'
    },
    // –ê–≤—Ç–æ –ø–µ—Ä–µ–≤–æ–∑–∫–∏
    {
      src: '/assets/images/auto-case.jpg',
      alt: t('images.auto.alt'),
      title: t('images.auto.title'),
      icon: 'üöö'
    },
    // –ü—Ä–æ–µ–∫—Ç–Ω—ã–µ
    {
      src: '/assets/images/project-cargo.jpg',
      alt: t('images.project.alt'),
      title: t('images.project.title'),
      icon: 'üèóÔ∏è'
    },
    // –¢–∞–º–æ–∂–µ–Ω–Ω—ã–µ
    {
      src: '/assets/images/customs-new.jpg',
      alt: t('images.customs.alt'),
      title: t('images.customs.title'),
      icon: 'üèõÔ∏è'
    },
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏
    {
      src: '/assets/images/container-ship-new.jpg',
      alt: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏',
      title: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–Ω—ã–µ –ø–µ—Ä–µ–≤–æ–∑–∫–∏',
      icon: 'üì¶'
    }
  ];

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ª–∏—Å—Ç–∞–Ω–∏–µ –∫–∞–∂–¥—ã–µ 4 —Å–µ–∫—É–Ω–¥—ã
  useEffect(() => {
    if (isPaused) return;
    
    const interval = setInterval(() => {
      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);
    }, 4000);

    return () => clearInterval(interval);
  }, [images.length, isPaused]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–ª–∞–π–¥—É
  const goToSlide = (index: number) => {
    setCurrentIndex(index);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å–ª–∞–π–¥—É
  const nextSlide = () => {
    setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–ª–∞–π–¥—É
  const prevSlide = () => {
    setCurrentIndex((prevIndex) => (prevIndex - 1 + images.length) % images.length);
  };

  return (
    <div 
      className="relative w-full h-full overflow-hidden"
      onMouseEnter={() => setIsPaused(true)}
      onMouseLeave={() => setIsPaused(false)}
    >
      {/* –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ */}
      <AnimatePresence mode="wait">
        <motion.div
          key={currentIndex}
          className="absolute inset-0"
          initial={{ opacity: 0, scale: 1.1 }}
          animate={{ opacity: 1, scale: 1 }}
          exit={{ opacity: 0, scale: 0.9 }}
          transition={{ duration: 1, ease: "easeInOut" }}
        >
          {/* –†–µ–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º –æ–≤–µ—Ä–ª–µ–µ–º */}
          <div className="w-full h-full relative">
            <img 
              src={images[currentIndex].src} 
              alt={images[currentIndex].alt}
              className="w-full h-full object-cover"
              onError={(e) => {
                // –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—É—é –∑–∞–≥–ª—É—à–∫—É
                const target = e.target as HTMLImageElement;
                target.style.display = 'none';
                const fallback = target.nextElementSibling as HTMLElement;
                if (fallback) fallback.style.display = 'block';
              }}
            />
            {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π –æ—à–∏–±–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ */}
            <div 
              className="absolute inset-0 bg-gradient-to-br from-velta-navy via-velta-700 to-velta-600 hidden"
              style={{ display: 'none' }}
            />
            {/* –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π */}
            <div className="absolute inset-0 bg-gradient-to-t from-velta-navy/10 via-transparent to-transparent" />
            
            {/* –£–±—Ä–∞–ª–∏ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—É—é –∏–∫–æ–Ω–∫—É –∏ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}

          </div>
        </motion.div>
      </AnimatePresence>

      {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ */}
      <button
        onClick={prevSlide}
        className="absolute left-4 top-1/2 transform -translate-y-1/2 z-20 bg-white/20 hover:bg-white/30 text-white p-3 rounded-full backdrop-blur-sm transition-all duration-300 hover:scale-110"
        aria-label={t('navigation.previous')}
      >
        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
        </svg>
      </button>

      <button
        onClick={nextSlide}
        className="absolute right-4 top-1/2 transform -translate-y-1/2 z-20 bg-white/20 hover:bg-white/30 text-white p-3 rounded-full backdrop-blur-sm transition-all duration-300 hover:scale-110"
        aria-label={t('navigation.next')}
      >
        <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
        </svg>
      </button>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–æ–≤ */}
      <div className="absolute bottom-4 left-1/2 transform -translate-x-1/2 z-20 flex space-x-2">
        {images.map((_, index) => (
          <button
            key={index}
            onClick={() => goToSlide(index)}
            className={`w-3 h-3 rounded-full transition-all duration-300 ${
              index === currentIndex 
                ? 'bg-white scale-125' 
                : 'bg-white/50 hover:bg-white/75'
            }`}
            aria-label={t('navigation.goToSlide', { number: index + 1 })}
          />
        ))}
      </div>

      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
      <div className="absolute bottom-0 left-0 right-0 h-1 bg-white/20 z-20">
        <motion.div
          className="h-full bg-white"
          initial={{ width: 0 }}
          animate={{ width: '100%' }}
          transition={{ duration: 4, ease: "linear" }}
          key={currentIndex}
        />
      </div>
    </div>
  );
}
